@model DoAnCoSo.ViewModels.ProductDetailViewModel
@* @{ *@
@*     ViewData["Title"] = "Detail"; *@
@*      int numOfQuantity = 1; *@
@* } *@

<div class="container py-5">
    <div class="row">
        <!-- Product Images -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <img id="mainProductImage" src="@Model.Product.ImageUrl" class="card-img-top" alt="Product Image">
                <div class="card-body">
                    <div class="row g-2">
                        @if (Model.Product.Images != null && Model.Product.Images.Any())
                        {
                            @foreach (var productImage in Model.Product.Images)
                            {
                                <div class="col-3">
                                    @if (!string.IsNullOrEmpty(productImage.Url))
                                    {
                                        <img src="@productImage.Url" class="img-thumbnail" alt="Product Thumbnail" style="cursor: pointer;">
                                    }
                                    else
                                    {
                                        <img src="~/images/placeholder_thumbnail.png" class="img-thumbnail" alt="No thumbnail" style="cursor: pointer;">
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 text-center">Không có ảnh phụ nào.</div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Product Details -->
        <div class="col-md-6">

            <h1 class="h2 mb-3">@Model.Product.Name</h1>
            <div class="mb-3">
                @* <span class="h4 me-2 text-danger fs-4">@Model.PriceReduced.ToString("0.##")đ</span> *@

                @if (Model.Product.PriceReduced != null && Model.Product.PriceReduced > 0 && Model.Product.PriceReduced < Model.Product.Price)
                {
                    // Nếu có giá giảm -> Hiển thị giá giảm, giá gốc gạch ngang và phần trăm giảm
                    <span class="fw-bold text-danger fs-4">@($"{Model.Product.PriceReduced.Value.ToString("N0")}đ")</span>
                    <del class="text-muted">@Model.Product.Price.ToString("N0")đ</del>
                    <span class="badge bg-danger">@Model.Product.DiscountPercentage.ToString("0.##")%</span>
                }
                else
                {
                    // Nếu không nhập giá giảm -> Chỉ hiển thị giá gốc
                    <span class="fw-bold text-danger fs-4">@($"{Model.Product.Price.ToString("N0")}đ")</span>
                }
            </div>

            <div class="mb-3">
                <div class="d-flex align-items-center">
                    <div class="text-warning me-2" id="productRatingDisplay">
                        @{

                            double roundedAverageRating = Math.Round(Model.AverageRating * 2) / 2;

                            for (int i = 1; i <= 5; i++)
                            {
                                if (roundedAverageRating >= i)
                                {
                                    <i class="fas fa-star"></i>
                                    // Sao đầy
                                }
                                else if (roundedAverageRating >= i - 0.5)
                                {
                                    <i class="fas fa-star-half-alt"></i>
                                    // Nửa sao
                                }
                                else
                                {
                                    <i class="far fa-star"></i>
                                    // Sao rỗng
                                }
                            }
                        }
                    </div>
                    <span class="text-muted">(@Model.TotalReviews reviews)</span>
                </div>
            </div>

            <p class="mb-4 fw-semibold">
                Thương hiệu: <span class="text-primary">@Model.Product.Trademark</span>
            </p>


            <div class="product-detail-actions-container">
                <div class="product-options-group">
                    @if (Model.Product.FlavorsList != null && Model.Product.FlavorsList.Any())
                    {
                        <div class="mb-4">
                            <h6 class="mb-2">Hương vị</h6>
                            <div class="flavor-options-container" role="group">
                                @for (int i = 0; i < Model.Product.FlavorsList.Count; i++)
                                {
                                    var id = $"flavor{i}";
                                    <input type="radio" class="btn-check flavor-radio" name="flavor" id="@id" value="@Model.Product.FlavorsList[i]" @(i == 0 ? "checked" : "")>
                                    <label class="flavor-option-label" for="@id">@Model.Product.FlavorsList[i]</label>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">Không có hương vị nào.</p>
                    }

                    <div class="mb-4">
                        <div class="d-flex align-items-center">
                            <label class="me-2">Số lượng</label>
                            <select class="form-select w-auto" name="quantity" id="quantitySelect">
                                <option>1</option>
                                <option>2</option>
                                <option>3</option>
                                <option>4</option>
                                <option>5</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="d-flex gap-2 mb-4">
                    @* Thêm mb-4 để tạo khoảng cách với phần trên *@
                    <a href="#" onclick="buyNow()" class="btn btn-primary flex-grow-1 text-center py-2">Mua Ngay</a>

                    <form asp-controller="ShoppingCart" asp-action="AddToCart" method="post" id="addToCartForm" class="flex-grow-1">
                        <input type="hidden" name="productId" value="@Model.Product.Id" />
                        <input type="hidden" name="flavor" id="hiddenFlavor" />
                        <input type="hidden" name="quantity" id="hiddenQuantity" value="1" />


                        <button type="submit" class="btn btn-outline-dark w-100">
                            @* Loại bỏ onclick="updateAddToCartQuantity()" ở đây, sẽ xử lý bằng JS chung *@
                            <i class="bi-cart-fill me-1"></i> Thêm vào giỏ hàng
                        </button>
                    </form>
                </div>
            </div>
            <!-- Additional Info -->
            <div class="mt-4">
                <div class="d-flex align-items-center">
                    <i class="fas fa-shield-alt text-primary me-2"></i>
                    <span><p class="mt-3">Gọi đặt mua: <strong>098.xxx.xxxx</strong> (8h30 - 22h30)</p></span>
                </div>
            </div>
        </div>
    </div>


    @* {{-- ============= BẮT ĐẦU: Thêm phần Mô tả sản phẩm ============= --}} *@
    <div class="row mt-5">
        <div class="col-12">
            <h2>Mô tả sản phẩm</h2>
            <hr />
            @if (!string.IsNullOrEmpty(Model.Product.Description))
            {
                @* { { --Hiển thị mô tả.Nếu mô tả có HTML, cần dùng @Html.Raw()--} } *@
                <p>@Model.Product.Description</p>
                @* @if (!string.IsNullOrEmpty(Model.Product.Description)) { <div>@Html.Raw(Model.Product.Description)</div> } *@
            }
            else
            {
                <p class="text-muted">Sản phẩm chưa có mô tả.</p>
            }
        </div>
    </div>
    @*  ============= KẾT THÚC: Thêm phần Mô tả sản phẩm =============  *@


    @*  ============= BẮT ĐẦU: Thêm phần Bình luận và Đánh giá =============  *@
    <div class="row mt-5">
        <div class="col-12">
            <h2>Bình luận và Đánh giá</h2>
            <hr />

            @*  --- Hiển thị danh sách bình luận hiện có ---  *@
            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                @foreach (var review in Model.Reviews)
                {
                    <div class="mb-4 pb-2" style="border-bottom: 1px solid #eee;">
                        <p class="mb-1">
                            <strong>
                                @* Hiển thị tên người dùng nếu có (cần Include User trong Repository), hoặc "Ẩn danh"  *@
                                @* @(review.User != null ? review.User.UserName : "Ẩn danh")  *@
                                @* Tạm hiển thị ID User nếu có, hoặc "Ẩn danh" như code Controller đã gán  *@
                                @(review.User != null ? review.User.FullName : "Ẩn danh")
                            </strong>

                            <span class="text-warning">
                                @for (int i = 0; i < review.Rating; i++)
                                {
                                    <i class="fas fa-star"></i>
                                    @* { { --Font Awesome sao vàng--} } *@
                                }
                                @* {{-- Hiển thị sao rỗng cho đủ 5 sao --}} *@
                                @for (int i = review.Rating; i < 5; i++)
                                {
                                    <i class="far fa-star"></i>
                                    @* { { --Font Awesome sao rỗng--} } *@
                                }
                            </span>
                            (@review.Rating/5)
                        </p>
                        @if (!string.IsNullOrEmpty(review.CommentText))
                        {
                            <p class="mb-1">@review.CommentText</p>
                        }

                        @* {{-- --- Hiển thị hình ảnh bình luận (nếu có) --- --}} *@
                        @if (review.Images != null && review.Images.Any())
                        {
                            <div class="mt-2">
                                <h6>Hình ảnh từ bình luận:</h6>
                                <div class="row g-2">
                                    @foreach (var reviewImage in review.Images)
                                    {
                                        <div class="col-auto">
                                            @if (!string.IsNullOrEmpty(reviewImage.ImageUrl))
                                            {
                                                <img src="@reviewImage.ImageUrl" alt="Ảnh bình luận" class="img-thumbnail" style="max-width: 100px; height: auto;">
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }

                        <p class="mb-0"><small class="text-muted">Ngày: @(review.CreatedDate?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</small></p>
                    </div>
                    @* { { --End single review --} } *@
                }
            }
            else
            {
                <p>Chưa có bình luận nào cho sản phẩm này.</p>
            }

            <hr />

            @* {{-- --- Form để thêm bình luận mới --- --}} *@
            <h3>Viết bình luận của bạn</h3>

            @* {{-- @Html.ValidationSummary(false, "", new { @class = "text-danger" }) --}} {{-- Tùy chọn: Hiển thị tất cả lỗi validation --}} *@

            <form asp-action="AddReview" method="post" enctype="multipart/form-data">
                @* {{-- Thêm enctype="multipart/form-data" BẮT BUỘC để upload file --}} *@
                @Html.AntiForgeryToken()

                @* {{-- Input ẩn cho ProductId --}} *@
                <input type="hidden" asp-for="NewReview.ProductId" value="@Model.Product.Id" />
                <input type="hidden" asp-for="NewReview.UserId" />
                @* {{-- Nếu UserId là null (người dùng chưa đăng nhập), input này sẽ không được tạo, hoặc tạo với value rỗng --}} *@


                @* Input cho đánh giá sao *@
                <div class="form-group mb-3">
                    <label asp-for="NewReview.Rating" class="form-label">Đánh giá:</label>
                    <div class="rating-input">

                        <input type="hidden" asp-for="NewReview.Rating" id="ratingValue" value="0" />
                        <i class="star far fa-star" data-value="1"></i>
                        <i class="star far fa-star" data-value="2"></i>
                        <i class="star far fa-star" data-value="3"></i>
                        <i class="star far fa-star" data-value="4"></i>
                        <i class="star far fa-star" data-value="5"></i>
                    </div>
                    <span asp-validation-for="NewReview.Rating" class="text-danger"></span>
                </div>

                @* {{-- Input cho nội dung bình luận --}} *@
                <div class="form-group mb-3">
                    <label asp-for="NewReview.CommentText" class="form-label">Nội dung bình luận:</label>
                    <textarea asp-for="NewReview.CommentText" class="form-control" rows="4"></textarea>
                    <span asp-validation-for="NewReview.CommentText" class="text-danger"></span>
                </div>


                <div class="form-group mb-3">
                    <label for="reviewImages" class="form-label">Thêm hình ảnh (tùy chọn):</label>
                    <input type="file" class="form-control" id="reviewImages" name="ReviewImages" multiple accept="image/*">
                </div>


                @* {{-- Nút Submit Form --}} *@
                <button type="submit" class="btn btn-primary">Gửi bình luận</button>

            </form>
        </div>
    </div>
    @* {{-- ============= KẾT THÚC: Phần Bình luận và Đánh giá ============= --}} *@
</div>

<script>
       document.addEventListener('DOMContentLoaded', function() {
        // Cập nhật giá trị ẩn ngay khi tải trang nếu có lựa chọn mặc định
        updateHiddenInputs();

        // Gắn sự kiện change cho dropdown số lượng
        var quantitySelect = document.getElementById('quantitySelect');
        if (quantitySelect) {
            quantitySelect.addEventListener('change', updateHiddenInputs);
        }

        // Gắn sự kiện change cho các radio button hương vị
        var flavorRadios = document.querySelectorAll('input[name="flavor"]');
        flavorRadios.forEach(function(radio) {
            radio.addEventListener('change', updateHiddenInputs);
        });

        // Gắn sự kiện submit cho form, đảm bảo input ẩn được cập nhật cuối cùng
        var addToCartForm = document.getElementById('addToCartForm');
        if (addToCartForm) {
            addToCartForm.addEventListener('submit', function(event) {
                updateHiddenInputs(); // Đảm bảo giá trị mới nhất được cập nhật trước khi submit
                // Không cần event.preventDefault() nếu bạn muốn form submit bình thường
            });
        }
    });

    // Hàm này cập nhật các input ẩn trong form "Thêm vào giỏ hàng"
    function updateHiddenInputs() {
        var quantitySelect = document.getElementById('quantitySelect');
        if (quantitySelect) {
            document.getElementById('hiddenQuantity').value = quantitySelect.value;
        }

        var selectedFlavorRadio = document.querySelector('input[name="flavor"]:checked');
        if (selectedFlavorRadio) {
            document.getElementById('hiddenFlavor').value = selectedFlavorRadio.value;
        } else {
            // Nếu không có hương vị nào được chọn (hoặc không có phần hương vị), gán chuỗi rỗng
            document.getElementById('hiddenFlavor').value = '';
        }
    }


    // Hàm buyNow() sẽ chuyển hướng đến trang Checkout (GET)
    function buyNow() {
        var productId = "@Model.Product.Id";
        var quantity = document.getElementById('quantitySelect').value;

        var selectedFlavorRadio = document.querySelector('input[name="flavor"]:checked');
        var flavor = selectedFlavorRadio ? selectedFlavorRadio.value : ''; // Lấy hương vị đã chọn, nếu có

        // Chuyển hướng đến action Checkout với cờ IsBuyNow
        // Sử dụng encodeURIComponent để xử lý các ký tự đặc biệt trong hương vị
        window.location.href = `/ShoppingCart/Checkout?isBuyNow=true&buyNowProductId=${productId}&buyNowQuantity=${quantity}&buyNowFlavor=${encodeURIComponent(flavor)}`;
    }


    // Mã JavaScript mới cho chức năng đổi ảnh chính khi click thumbnail
    document.addEventListener('DOMContentLoaded', function() {
        // Lấy thẻ <img> hiển thị ảnh chính bằng ID
        var mainImage = document.getElementById('mainProductImage');

        // Lấy tất cả các thẻ <img> là ảnh thumbnail
        // Chúng ta giả định tất cả các ảnh thumbnail có class 'img-thumbnail'
        var thumbnails = document.querySelectorAll('.img-thumbnail');

        // Duyệt qua từng ảnh thumbnail và thêm bộ lắng nghe sự kiện click
        thumbnails.forEach(function(thumbnail) {
            thumbnail.addEventListener('click', function() {
                // Lấy đường dẫn nguồn ảnh của thumbnail vừa click
                var newMainImageSrc = this.src; // 'this' trỏ đến thẻ <img> thumbnail


                mainImage.src = newMainImageSrc;


            });
        });
    });

    // Phần bình luận và đánh giá hiển thị ngôi sao
    document.addEventListener('DOMContentLoaded', function () {
        const stars = document.querySelectorAll('.rating-input .star');
        const ratingValueInput = document.getElementById('ratingValue');
        let currentRating = parseInt(ratingValueInput.value) || 0;

        // Cập nhật hiển thị sao
        function updateStarAppearance(rating) {
            stars.forEach(star => {
                const value = parseInt(star.dataset.value);
                if (value <= rating) {
                    star.classList.remove('far');
                    star.classList.add('fas');
                } else {
                    star.classList.remove('fas');
                    star.classList.add('far');
                }
            });
        }

        // Khởi tạo hiển thị
        updateStarAppearance(currentRating);

        // Thêm sự kiện cho từng ngôi sao
        stars.forEach(star => {
            // Hover vào
            star.addEventListener('mouseover', () => {
                const hoverRating = parseInt(star.dataset.value);
                updateStarAppearance(hoverRating);
            });

            // Hover ra
            star.addEventListener('mouseout', () => {
                updateStarAppearance(currentRating); // Trở về trạng thái đã chọn
            });

            // Click
            star.addEventListener('click', () => {
                const clickedRating = parseInt(star.dataset.value);
                currentRating = clickedRating;
                ratingValueInput.value = clickedRating; // Cập nhật input ẩn
                updateStarAppearance(currentRating);
                // Có thể trigger validation input here if needed
            });
        });
    });
</script>